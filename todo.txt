Ordered by priority

tech :
 - see lombok hashCode / equals generated methods, how it work
 - test lombok equals generated for superclass like weapon (does it use item name to compare ?)
 - throw functionnals exceptions (buy room without enough money, ...) and manage display with angular
 - metrics
 - externalize configuration
 - i18n messages
 - create VM, add jenkins & sonar
 - integration test 
 - DBUnit (see http://blog.netapsys.fr/realiser-ses-tests-dintegration-avec-spring-test-dbunit/)
 - mock angular service for rest call
 - run test with jenkins & selenium, record jvm JMX data ? (proc, memory, network)
 - spring security, default user in dev mode. Used to find the user's shelter
 - attach domains to player (team, dweller, ...) if neccesasry
 - improve perf ... example : get citis list instead of world object, and get each city one by one
 
game : 
 - world map & city map => same thing with different scale. World map => map cells => city => city map => map cells => buildings, dwellers ... 3D city map ?
 - /!\ Optimize the world data transfert (get view center and limit cells send)
 - /!\ experience, lvl up : implement mathematical formula for the xp and the level
 - build unit, improve unit with room improvement like STR (battle realms ?)
	-> water & food use to "create" and train dwellers
	-> player can create new cities on the map, find empty or fight to take controle
 - add strategy for team : attack lower hp, lower lvl, ...
 - add strategy for dweller : when take potion (if carry) ?
 - generation map : Add spot to cities
 - generation map : generate square (empty), then generate water (shape), then add some rock (remove circular map fonctionnality)
 - add vehicles : team only can own vehicle, but vehicles had size limit
 - building with resources capacity to limit food, water, ...
 - improve notion of "room size" => cells uses & dwellers capacity...
 - money/water/food use to build room
 - power use by room
 - resources : update the new values if necessary (build, sell, all actions from player)
 - start with a small shelter, with limited space. can extend shelter with space around on the map.
 - colonization of empty space : create new city for the player. 2 screens : manage city & world map view
 - create missions "type", and percent success / reward with dwellers stats. Mission unlock with exploring (find dwellers, find food, find tech, ...)
 
blog : 
 - mockito any()
 - findOne vs getOne
 - eclipse replace regex <bean:write name="([a-zA-Z]+)" property="([a-zA-Z]+)" *\/> => \${$1.$2}
 - generate text with csv like data
 - example for each spring mvc / data / other good thing
 - @requestParam vs @PathVariable, who's the best for GET http method ?